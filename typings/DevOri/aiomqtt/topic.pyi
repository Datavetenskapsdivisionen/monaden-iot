"""
This type stub file was generated by pyright.
"""

import dataclasses
import sys
from typing import TypeAlias

if sys.version_info >= (3, 10):
    ...
else:
    ...
MAX_TOPIC_LENGTH = ...
@dataclasses.dataclass(frozen=True)
class Wildcard:
    """MQTT wildcard that can be subscribed to, but not published to.

    A wildcard is similar to a topic, but can optionally contain ``+`` and ``#``
    placeholders. You can access the ``value`` attribute directly to perform ``str``
    operations on a wildcard.

    Args:
        value: The wildcard string.

    Attributes:
        value: The wildcard string.
    """
    value: str
    def __str__(self) -> str:
        ...
    
    def __post_init__(self) -> None:
        """Validate the wildcard."""
        ...
    


WildcardLike: TypeAlias = ...
@dataclasses.dataclass(frozen=True)
class Topic(Wildcard):
    """MQTT topic that can be published and subscribed to.

    Args:
        value: The topic string.

    Attributes:
        value: The topic string.
    """
    def __post_init__(self) -> None:
        """Validate the topic."""
        ...
    
    def matches(self, wildcard: WildcardLike) -> bool:
        """Check if the topic matches a given wildcard.

        Args:
            wildcard: The wildcard to match against.

        Returns:
            True if the topic matches the wildcard, False otherwise.
        """
        ...
    


TopicLike: TypeAlias = ...
